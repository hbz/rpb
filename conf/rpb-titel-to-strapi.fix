# Remove titles that are already in lobid-resources
# (see https://jira.hbz-nrw.de/browse/RPB-28)
if exists ("f983")
  if all_match("f36_","s|sm")
    reject()
  end
end
do once()
  put_filemap("https://github.com/hbz/lookup-tables/raw/master/data/almaMmsId2rpbId.tsv",
    "rpbId2almaMmsId", "key_column": "1", "value_column": "0", "sep_char": "\t")
end
paste("inLobid", "~RPB", "f00_", "join_char": "")
lookup("inLobid", "rpbId2almaMmsId", "delete": "true")
if exists("inLobid")
  reject()
end

do put_macro("add")
  if exists("$[from]")
    set_array("_temp")
    copy_field("$[from]", "_temp.$append.f$[to]_")
    add_field("_temp.*.n$[to]a", "$[type]")
    move_field("_temp.*", "f$[to][].$append")
  end
end

do put_macro("add_all")
  set_array("f$[to][]")
  call_macro("add", to: "$[to]", from: "f$[from]", type: "")
end

do put_macro("add_url")
  if exists("$[from]")
    if all_match("$[from]", "(https?|ftp):\\/\\/(\\S+\\.)+\\S+(\\/\\S*)?|")
      move_field("$[from]", "f90[].$append.f90_")
      add_field("f90[].*.n90", "$[type]")
    end
  end
end

call_macro("add_all", to: "24", from: "24?") # Paralleltitel
call_macro("add_all", to: "27", from: "27?") # Abweichende Titel

call_macro("add_all", to: "30", from: "30?") # Sachnotation
call_macro("add_all", to: "31", from: "31?") # Ortsnotation
call_macro("add_all", to: "32", from: "32?") # Schlagwortkette

call_macro("add_all", to: "70", from: "70[_123456789]") # Quelle

# Seitenzahl in f70s ist Pflichtfeld für Artikel (f36_=u)
unless exists("f70s")
 if all_equal("f36_", "u")
  if exists("f70_")
    copy_field("f70_", "f70s")
    prepend("f70s", "Kopiert aus f70_: ")
    put_var("pages", ".*(S(\\.|eiten?)\\s+\\d+(\\s*-\\s*\\d+)?).*")
    if all_match("f70_", "$[pages]")
      if is_string("f70_")
        replace_all("f70s", "$[pages]", "Aus f70_: $1")
      end
    end
  else
    add_field("f70s", "N/A")
  end
 end
end

call_macro("add_all", to: "81", from: "81?") # Anmerkungen
call_macro("add_all", to: "85", from: "85?") # Gesamttitel

# URL
set_array("f90[]")

call_macro("add_url", from: "f90e", type: "Volltext")
call_macro("add_url", from: "f90f", type: "Andere URL")

# Signatur
set_array("f90a[]")

if exists("f90a")
  move_field("f90a", "f90a[].$append.f90a")
  # add_field("f90a[].*.n90a", "KO") etc.
end

# Person
set_array("f40[]")

call_macro("add", to: "40", from: "f40?", type: "Verfasser")
call_macro("add", to: "40", from: "f41?", type: "Herausgeber")
call_macro("add", to: "40", from: "f42?", type: "Mitwirkender")
call_macro("add", to: "40", from: "f43?", type: "Bearb.")
call_macro("add", to: "40", from: "f44?", type: "Begr.")
call_macro("add", to: "40", from: "f45?", type: "Sammler")
call_macro("add", to: "40", from: "f46?", type: "Librettist")
call_macro("add", to: "40", from: "f47?", type: "Übersetzer")
call_macro("add", to: "40", from: "f50?", type: "Illustrator")
call_macro("add", to: "40", from: "f51?", type: "Verfasser von ergänzendem Text")
call_macro("add", to: "40", from: "f52?", type: "Komponist")
call_macro("add", to: "40", from: "f56?", type: "Red.")
call_macro("add", to: "40", from: "f57?", type: "Sonstige")
call_macro("add", to: "40", from: "f58?", type: "Ausführender")
call_macro("add", to: "40", from: "f59?", type: "Gefeierter")

# Körperschaft
set_array("f60[]")

call_macro("add", to: "60", from: "f60?", type: "HE Urheber")
call_macro("add", to: "60", from: "f61?", type: "NE hrsg. Körperschaft")
call_macro("add", to: "60", from: "f69?", type: "Gefeierte Körperschaft")

if all_match("f18_","[xX]")
  move_field("f18_","f18_~")
  set_field("f18_~", "true")
end

vacuum()
