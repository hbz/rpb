# Remove titles that are already in lobid-resources, currently disabled
# (see https://jira.hbz-nrw.de/browse/RPB-28, https://jira.hbz-nrw.de/browse/RPB-100)

# if exists ("f983")
#   if all_match("f36_","s|sm")
#     reject()
#   end
# end
# do once()
#   put_filemap("https://github.com/hbz/lookup-tables/raw/master/data/almaMmsId2rpbId.tsv",
#     "rpbId2almaMmsId", "key_column": "1", "value_column": "0", "sep_char": "\t")
# end
# paste("inLobid", "rpbId", "join_char": "")
# lookup("inLobid", "rpbId2almaMmsId", "delete": "true")
# if exists("inLobid")
#   reject()
# end

do put_macro("move")
  if exists("$[from]")
    set_array("_temp")
    copy_field("$[from]", "_temp.$append.value")
    add_field("_temp.*.type", "$[type]")
    move_field("_temp.*", "$[to][].$append")
    remove_field("$[from]")
  end
end

do put_macro("move_all")
  set_array("$[to][]")
  call_macro("move", to: "$[to]", from: "$[from]", type: "")
end

do put_macro("add_url")
  if exists("$[from]")
    if all_match("$[from]", "(https?|ftp):\\/\\/(\\S+\\.)+\\S+(\\/\\S*)?|")
      move_field("$[from]", "url[].$append.value")
      set_field("url[].$last.type", "$[type]")
    end
  end
end

do put_macro("ref_volumeIn_unless_exists")
  unless exists("$[field]")
    add_field("$[field]", "s. Zählung in numbering")
  end
end

do put_macro("contribution_to_uri")
  do list (path:"$[field][]", "var": "$i")
    replace_all("$i.value","_(.*)_","$1")
    if all_match("$i.value","^00.*|^107n.*|^929n.*")
      prepend("$i.value", "https://rpb.lobid.org/agent/")
    elsif all_match("$i.value","^\\d.*")
      replace_all("$i.value", "(^\\d*)n(\\d)", "$1-$2")
      prepend("$i.value", "https://d-nb.info/gnd/")
    end
  end
end

do put_macro("to_bool")
  if exists("$[from]")
    move_field("$[from]","$[to]~")
    set_field("$[to]~", "true")
  end
end

move_field("f00_", "rpbId")
move_field("f01_", "numbering")
call_macro("to_bool", from: "f14_", to: "doNotIndex")
move_field("f18_", "inCollection")
move_field("f20_", "title")
move_field("f21_", "preferredTitle")
call_macro("move_all", from: "f24?", to: "parallelTitle")
call_macro("move_all", from: "f27?", to: "alternativeTitle")
move_field("f28_", "alternativeSpelling")
move_field("f36_", "type")
call_macro("move_all", from: "f70[_123456789]", to: "bibliographicCitation")
move_field("f70b", "volume")
move_field("f70h", "issue")
move_field("f70j", "year")
move_field("f70s", "pages")
move_field("f70z", "alternativeNumbering")
move_field("f71_", "edition")
move_field("f74_", "publicationLocation")
move_field("f75_", "publishedBy")
move_field("f76a", "publicationDate")
move_field("f76b", "publicationYear")
move_field("f77_", "extent")
call_macro("move_all", from: "f81?", to: "note")
call_macro("move_all", from: "f85?", to: "isPartOf")
call_macro("move", to: "isPartOf", from: "f20u", type: "")
move_field("f86_", "otherId")

call_macro("move_all", from: "f30?", to: "subject") # Sachnotation
replace_all("subject[].*.value","_s(n\\d+)_","http://purl.org/lobid/rpb#$1")

call_macro("move_all", to: "spatial", from: "f31?") # Ortsnotation
do list (path:"spatial[]", "var": "$i")
  if any_match("$i.value", "^_r\\d{2}_\\s_(\\d*)n(\\d)_$")
    replace_all("$i.value","^_r\\d{2}_\\s_(\\d*)n(\\d)_$","https://d-nb.info/gnd/$1-$2")
  elsif any_contain("$i.value", "_r99_")
    replace_all("$i.value","^_r99_\\s_o(\\d+)_$","https://rpb.lobid.org/spatial#n$1")
  else
    replace_all("$i.value","^_r(\\d{2})_$","https://rpb.lobid.org/spatial#n$1")
  end
end

call_macro("move_all", to: "subjectComponentList", from: "f32?") # Schlagwortkette
do list (path:"subjectComponentList[]", "var": "$i")
  split_field("$i.value", " ; ")
  set_array("$i.subjectComponent[]")
  move_field("$i.value", "$i.subjectComponent[].$append.value")
end
do list (path:"subjectComponentList[].*.subjectComponent[]", "var": "$i")
  replace_all("$i.value","_(.*)_","$1")
  if all_match("$i.value","^00.*|^036n.*|^107n.*|^121n.*|^929n.*|z.*")
    prepend("$i.value", "https://rpb.lobid.org/sw/")
  else
    replace_all("$i.value", "(^\\d*)n(\\d)", "$1-$2")
    prepend("$i.value", "https://d-nb.info/gnd/")
  end
end

# Erscheinungsdatum (76a) und Erscheinungsjahr (76b) sind Pflicht, bei Bänden aber oft nur numbering (Zählung) vorhanden:
if all_equal("type", "sbd")
  call_macro("ref_volumeIn_unless_exists", field: "publicationDate")
  call_macro("ref_volumeIn_unless_exists", field: "publicationYear")
end

# Erscheinungsdatum (76a) und Erscheinungsjahr (76b) sind Pflicht bei allen selbständigen Werken (Einheitsmaske):
if all_match("type", "s|sbd|sm")
  unless exists("publicationDate")
    add_field("publicationDate", "N/A")
  end
  unless exists("publicationYear")
    add_field("publicationYear", "N/A")
  end
end

unless exists("f39_")
  move_field("f39x", "f39_") # 39x ist nicht Teil der Planung Eingabeformulare, verschwindet sonst
  prepend("f39_", "Aus f39x: ")
end
move_field("f39_", "responsibilityStatement")

# 70 ist Pflicht für Aufsätze, ist aber häufig nicht gesetzt, nur spezifische Einzelfelder:
if all_equal("type", "u")
  unless exists("bibliographicCitation[].1")
    add_field("bibliographicCitation[].$append.value", "s. spez. Felder (volume, issue, etc.)")
  end
end

# Seitenzahl in pages ist Pflichtfeld für Artikel (type=u)
unless exists("pages")
 if all_equal("type", "u")
  if exists("bibliographicCitation[].1")
    copy_field("bibliographicCitation[].1.value", "pages")
    prepend("pages", "Kopiert aus bibliographicCitation: ")
    put_var("pages", ".*(S(\\.|eiten?)\\s+\\d+(\\s*-\\s*\\d+)?).*")
    if all_match("bibliographicCitation[].1.value", "$[pages]")
      if is_string("bibliographicCitation[].1.value")
        replace_all("pages", "$[pages]", "Aus bibliographicCitation: $1")
      end
    end
  else
    add_field("pages", "N/A")
  end
 end
end

# Menschenlesbare Werte nutzen (für die Erfassung in Strapi)
if is_array("type")
  # print_record("Mehrere Satztypen gefunden: ")
  set_field("type", "type.$last")
end
lookup("type", s: "Monografie", sm: "Mehrt. Mono (ÜO)", sbd: "Band")


set_array("url[]")

call_macro("add_url", from: "f90e", type: "Volltext")
call_macro("add_url", from: "f90f", type: "Andere URL")
call_macro("add_url", from: "f90g", type: "Andere URL")

set_array("item[]")

move_field("f90a", "item[].$append.value") # Signatur

# Person
set_array("person[]")

call_macro("move", to: "person", from: "f40?", type: "http://id.loc.gov/vocabulary/relators/aut")
call_macro("move", to: "person", from: "f41?", type: "http://id.loc.gov/vocabulary/relators/pbl")
call_macro("move", to: "person", from: "f42?", type: "http://id.loc.gov/vocabulary/relators/ctb")
call_macro("move", to: "person", from: "f43?", type: "http://id.loc.gov/vocabulary/relators/edt")
call_macro("move", to: "person", from: "f44?", type: "http://id.loc.gov/vocabulary/relators/ccp")
call_macro("move", to: "person", from: "f45?", type: "http://id.loc.gov/vocabulary/relators/col")
call_macro("move", to: "person", from: "f46?", type: "http://id.loc.gov/vocabulary/relators/lbt")
call_macro("move", to: "person", from: "f47?", type: "http://id.loc.gov/vocabulary/relators/trl")
call_macro("move", to: "person", from: "f50?", type: "http://id.loc.gov/vocabulary/relators/ill")
call_macro("move", to: "person", from: "f51?", type: "http://id.loc.gov/vocabulary/relators/wst")
call_macro("move", to: "person", from: "f52?", type: "http://id.loc.gov/vocabulary/relators/cmp")
call_macro("move", to: "person", from: "f56?", type: "http://id.loc.gov/vocabulary/relators/red")
call_macro("move", to: "person", from: "f57?", type: "http://id.loc.gov/vocabulary/relators/oth")
call_macro("move", to: "person", from: "f58?", type: "http://id.loc.gov/vocabulary/relators/act")
call_macro("move", to: "person", from: "f59?", type: "http://id.loc.gov/vocabulary/relators/hnr")

call_macro("contribution_to_uri", field: "person")

# Körperschaft
set_array("corporateBody[]")

call_macro("move", to: "corporateBody", from: "f60?", type: "http://id.loc.gov/vocabulary/relators/org")
call_macro("move", to: "corporateBody", from: "f61?", type: "http://id.loc.gov/vocabulary/relators/isb")
call_macro("move", to: "corporateBody", from: "f69?", type: "http://id.loc.gov/vocabulary/relators/hnr")

call_macro("contribution_to_uri", field: "corporateBody")

if exists("inCollection")
  set_field("inCollection", "RPB und BiblioVino")
else
  if all_contain("rpbId", "w")
    set_field("inCollection", "nur BiblioVino")
  else
    set_field("inCollection", "nur RPB")
  end
end

if exists("numbering")
  set_hash("volumeIn")
  if is_array("numbering") # Nicht wiederholbar, 1. Wert nehmen
    move_field("numbering.1", "numbering_temp")
    remove_field("numbering")
    move_field("numbering_temp", "numbering")
  end
  copy_field("numbering", "volumeIn.numbering") # Zählung (Vorlage)
  copy_field("numbering", "volumeIn.sortBy") # Zählung (Sortierform)
  replace_all("volumeIn.sortBy", "^.*((19|20)\\d\\d).*$", "$1")
  unless all_match("volumeIn.sortBy", "\\d{4}")
    remove_field("volumeIn.sortBy")
  end
  copy_field("_id", "volumeIn.value") # Verknüpfung zur MtM (ÜO)
  replace_all("volumeIn.value","b\\d+","")
  prepend("volumeIn.value","https://lobid.org/resources/")
end

# ISBNs (f87_, f871 ff.)
set_array("isbn[]")
if exists("f87?")
  set_array("_temp")
  copy_field("f87?", "_temp.$append.value")
  add_field("_temp.*.valid~", "true")
  move_field("_temp.*", "isbn[].$append")
end

vacuum()
