# Remove empty fields

vacuum()

# ------- Set JSON-LD context -------

set_field("@context","http://lobid.org/resources/context.jsonld")

# ------- Set "type" -------

set_array("type[]", "BibliographicResource")
if all_equal("#36 ", "u")
  set_field("type[].$append", "Article")
end
if all_equal("#36 ", "s")
  set_field("type[].$append", "Book")
end
if any_equal("#36 ", "sm")
  set_field("type[].$append", "Periodical")
end

# ------- rpbId -------

copy_field("_id", "rpbId")
prepend("rpbId","RPB") 

# ------- "id", using https URIs -------

copy_field("rpbId", "id")
prepend("id","https://lobid.org/resources/") 

# ------- hbzId -------
# Remove titles that are already in lobid-resources
#
# if exists ("#983")
#    reject()
# end

copy_field("#983", "hbzId")

# ------- biblioVinoId -------

copy_field("#84 ", "biblioVinoId")
replace_all("biblioVinoId", "\\.", "")

# ------- "inCollection" -------

set_hash("coll")
set_field("coll.id", "http://lobid.org/resources/HT013494180#!")
set_array("coll.type[]")
add_field("coll.type[].$append", "Collection")
add_field("coll.label", "Rheinland-Pfälzische Bibliographie")
set_array("inCollection[]")
move_field("coll", "inCollection[]")

# ------- "title" field -------

move_field("#20 ","title")

# Folgendes rausgenommen wegen 929t124030, 
# wo die sich wiederholenden #20er Probleme machen
# replace_all("title", "\\s\\+", "")

# ------- "extent" -------

move_field("#77 ", "extent")

# ------- "medium" -------
# Dafür scheint es keine explizite Angabe zu geben.


# -------- "responsibilityStatement" --------
# #39  ist nach Quelldatendoku die "Verfasserangabe (Vorlageform)"

set_array("responsibilityStatement")
move_field("#39 ", "responsibilityStatement[]")

# ------- "language" -------
# Dafür scheint es keine explizite Angabe zu geben.

# ------- "publication" object -------

set_hash("pub")
set_array("pub.location[]")
copy_field("#74 ", "pub.location[].$append")
if all_match("#76a", "\\d{4}")
  copy_field("#76a", "pub.startDate")
end

# Folgendes rausgenommen wegen 929t130101, in dem sich #76a wiederholt
# replace_all("pub.startDate","^\\[(\\d{4})\\]","$1")
set_array("pub.publishedBy[]")
copy_field("#75 ", "pub.publishedBy[].$append")
set_array("pub.type[]")
add_field("pub.type[].$append", "PublicationEvent")
set_array("publication[]")
move_field("pub", "publication[]")

# ------- "zdbId" -------

if any_equal("#36 ", "sm")
  move_field("#88 ", "zdbId")
end

# -------RPB-Sachnotationen --------

set_array("subject[]")

if exists ("#30*")
  move_field("#30*", "subject[].$append.id")
  replace_all("subject[].*.id","_s(n\\d+)_","http://purl.org/lobid/rpb#$1")
  uniq("subject[]")
  do list(path: "subject[]")
    add_field("label", "Platzhalter Schlagwortlabel")
    set_array("type[]")
    add_field("type[].$append", "Concept")
    add_field("source.id", "http://purl.org/lobid/rpb")
    add_field("source.label", "Systematik der Rheinland-Pfälzischen Bibliographie")
  end
end

# ------- Ortsnotation -------

# In den Testdaten sind die Werte in "#31 " und "#31a" identisch und ergeben eine Dublette. Der Grund ist, dass sie kombiniert mit "#30" und "#31a" eine Schlagwortfolge ergeben. Beim Treffen am 14.6.2022 wurde – wenn AP sich richtig erinnert – beschlossen, diese Ketten aufzuspalten in `spatial`- und `subject` -Einräge (analog zur NWbib).
# Einige Ortsschlagwörter in "#31~"" stammen aus der GND, werden aber nicht nach "subject" verschoben, sondern bleiben in `spatial`, siehe https://jira.hbz-nrw.de/browse/RPB-14?focusedCommentId=287089#comment-287089
# To Do: 
# 1. Sich wiederholende Werte werden momentan doppelt im JSON abgelegt, siehe test-output-27.json
# 2. Lookup der RPB-Raumsystematik-Labels

set_array("spatial[]")

do list (path:"#31?", "var": "$i")
  copy_field("$i", "spatial[].$append.id")
end

uniq("spatial[]")

do list (path:"spatial[]", "var": "$i")
  copy_field("$i.id", "$i.label")
  replace_all("$i.label","^_r\\d{2}_\\s_(.*?)_$","$1")
  if any_match("$i.id", "^_r\\d{2}_\\s_(\\d*)n(\\d)_$")
    replace_all("$i.id","^_r\\d{2}_\\s_(\\d*)n(\\d)_$","https://d-nb.info/gnd/$1-$2")
    lookup("$i.label", "RPB-Export_HBZ_SW.tsv","sep_char":"\t")
    set_array("$i.type[]","PlaceOrGeographicName")
    add_field("$i.source.id", "https://d-nb.info/gnd/7749153-1")
    add_field("$i.source.label", "Gemeinsame Normdatei (GND)")
  elsif any_contain("$i.id", "_r99_")
    replace_all("$i.id","^_r99_\\s_o(\\d+)_$","https://rpb.lobid.org/spatial#n$1")
    set_array("$i.type[]","Concept")
    add_field("$i.source.id", "https://rpb.lobid.org/spatial")
    add_field("$i.source.label", "RPB-Raumsystematik")
  else
    replace_all("$i.id","^_r(\\d{2})_$","https://rpb.lobid.org/spatial#n$1")
    set_array("$i.type[]","Concept")
    add_field("$i.source.id", "https://rpb.lobid.org/spatial")
    add_field("$i.source.label", "RPB-Raumsystematik")
  end
end

# ------- GND-Schlagwörter -------
# To Do:
# 1. Schlagwortketten stehen getrennt mit Semikola in einem Feld, z.B.
# #32 _4252261n4_ ; _4053474n1_ ; _00Sn09k3368351a_
# 2. Eine Schlagworfolge kann sowohl Nicht-GND als auch GND-Werte enthalten
# 3. Jede Schlagwortfolge muss in als Objekt im "subject"-Array mit
# "componentList" landen. Der Source-Wert jeweils an die Quelle angepasst.
# To Do: Die Transformation behandelt bisher GND-Ids (hier und in `spatial`) so, als würden sie allesamt einen Bindestrich enthalten, was ja nicht der Fall ist.

set_array("@subject[]")

do list (path:"#32?", "var": "$i")
  copy_field("$i", "@subject[].$append.@swf[]")
end

do list (path:"@subject[]", "var": "$i")
  set_array("subject[].$append.type[]","ComplexSubject")
  set_array("subject[].$last.label") # Muss Array sein, damit Labels in einem zweiten Schritt zusammengeführt werden können.
  set_array("subject[].$last.componentList[]")
  split_field("$i.@swf[]", " ; ")
  copy_field("$i.@swf[]", "subject[].$last.componentList[].$append.id")
end

do list (path:"subject[].*.componentList[]", "var": "$i")
  replace_all("$i.id","_(.*)_","$1")
  copy_field("$i.id", "$i.label")
  lookup("$i.label", "RPB-Export_HBZ_SW.tsv","sep_char":"\t")
  if all_match("$i.id","^00.*|^036n.*|^107n.*|^121n.*|^929n.*|z.*")
    prepend("$i.id", "https://rpb.lobid.org/sw/")
    add_field("$i.source.id", "http://rpb.lobid.org/sw")
    add_field("$i.source.label", "RPB-Sachsystematik")
  else
    replace_all("$i.id", "(^\\d*)n(\\d)", "$1-$2")
    prepend("$i.id", "https://d-nb.info/gnd/")
    add_field("$i.source.id", "https://d-nb.info/gnd/7749153-1")
    add_field("$i.source.label", "Gemeinsame Normdatei (GND)")
  end
end

# Generierung des pipe-separaierten Labels für eine gesamte Schlagwortfolge ("subject.label").

do list (path:"subject[]", "var": "$i")
  copy_field("$i.*.componentList[].label", "$i.label.$append")
  join_field("$i.label"," | ")
end

# ------- Contribution -------

set_array("contribution[]")
copy_field("#40?", "contribution[].$append.agent.id")

do list(path: "contribution[]")
  replace_all("agent.id","_(.*)_","$1")
  copy_field("agent.id", "agent.label")
  lookup("agent.label", "RPB-Export_HBZ_SW.tsv","sep_char":"\t")
  if all_match("agent.id","^00.*|^107n.*|^929n.*")
    prepend("agent.id", "https://rpb.lobid.org/agent/")
  else
    replace_all("agent.id", "(^\\d*)n(\\d)", "$1-$2")
    prepend("agent.id", "https://d-nb.info/gnd/")
  end
  add_field("role.id", "http://id.loc.gov/vocabulary/relators/aut")
  add_field("role.label", "Autor/in")
  set_array("type[]", "Contribution")
end

retain( "type[]", "contribution[]", "extent", "hasItem[]", "responsibilityStatement[]", "language[]", "medium[]", "subject[]", "title", "hbzId", "oclcNumber[]", "otherTitleInformation[]", "natureOfContent[]", "publication[]", "sameAs[]", "describedBy", "@context", "id", "zdbId", "spatial[]", "inCollection[]", "rpbId", "biblioVinoId" )
vacuum()